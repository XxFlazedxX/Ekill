-- MAX NONCHALANT SMALL UI (Flazed Grapple Kill) + DRAGGABLE + 1 ANIMATED ELEMENT + ROTATING RING

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local gui = Instance.new("ScreenGui")
gui.Name = "FlazedGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = game:GetService("CoreGui")

-- Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 200, 0, 90)
frame.Position = UDim2.new(1, -210, 0, 20)
frame.BackgroundColor3 = Color3.fromRGB(5, 5, 5)
frame.BackgroundTransparency = 0.15
frame.BorderSizePixel = 0
frame.Parent = gui

Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)
local stroke = Instance.new("UIStroke", frame)
stroke.Color = Color3.fromRGB(90, 90, 90)
stroke.Thickness = 1

-- Title
local title = Instance.new("TextLabel")
title.Text = "Flazed's Grapple Kill"
title.Size = UDim2.new(1, 0, 0, 22)
title.Position = UDim2.new(0, 0, 0, 4)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamSemibold
title.TextSize = 13
title.Parent = frame

-- Animated Dot
local dot = Instance.new("Frame")
dot.Size = UDim2.new(0, 6, 0, 6)
dot.Position = UDim2.new(0, 10, 0, 10)
dot.BackgroundColor3 = Color3.fromRGB(255, 0, 127)
dot.BorderSizePixel = 0
dot.Parent = frame
Instance.new("UICorner", dot).CornerRadius = UDim.new(1, 0)

-- Animate the dot (move left-right)
task.spawn(function()
	while true do
		TweenService:Create(dot, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
			Position = UDim2.new(0, 180, 0, 10)
		}):Play()
		wait(1)
		TweenService:Create(dot, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {
			Position = UDim2.new(0, 10, 0, 10)
		}):Play()
		wait(1)
	end
end)

-- Rotating Ring (centered and visible)
local ring = Instance.new("ImageLabel")
ring.Size = UDim2.new(0, 26, 0, 26)
ring.Position = UDim2.new(0.5, -13, 1, -28)
ring.AnchorPoint = Vector2.new(0.5, 0.5)
ring.BackgroundTransparency = 1
ring.Image = "rbxassetid://6031091009"
ring.ImageColor3 = Color3.fromRGB(255, 0, 127)
ring.ZIndex = 2
ring.Parent = frame

RunService.RenderStepped:Connect(function()
	ring.Rotation += 1
end)

-- Kill Status
local killStatus = Instance.new("TextLabel")
killStatus.Text = "Kill: OFF"
killStatus.Size = UDim2.new(1, -20, 0, 20)
killStatus.Position = UDim2.new(0, 10, 0, 30)
killStatus.BackgroundTransparency = 1
killStatus.TextColor3 = Color3.fromRGB(255, 255, 255)
killStatus.Font = Enum.Font.Gotham
killStatus.TextSize = 12
killStatus.TextXAlignment = Enum.TextXAlignment.Left
killStatus.Parent = frame

-- Sub status labels
local touchStatus = Instance.new("TextLabel")
touchStatus.Text = "Touch: ON"
touchStatus.Size = UDim2.new(1, -20, 0, 20)
touchStatus.Position = UDim2.new(0, 10, 0, 50)
touchStatus.BackgroundTransparency = 1
touchStatus.TextColor3 = Color3.fromRGB(180, 180, 180)
touchStatus.Font = Enum.Font.Gotham
touchStatus.TextSize = 11
touchStatus.TextXAlignment = Enum.TextXAlignment.Left
touchStatus.Parent = frame

local ragdollStatus = Instance.new("TextLabel")
ragdollStatus.Text = "Ragdoll: ON"
ragdollStatus.Size = UDim2.new(1, -20, 0, 20)
ragdollStatus.Position = UDim2.new(0, 10, 0, 66)
ragdollStatus.BackgroundTransparency = 1
ragdollStatus.TextColor3 = Color3.fromRGB(180, 180, 180)
ragdollStatus.Font = Enum.Font.Gotham
ragdollStatus.TextSize = 11
ragdollStatus.TextXAlignment = Enum.TextXAlignment.Left
ragdollStatus.Parent = frame

-- Grapple Kill Logic
local damagePart = workspace:FindFirstChild("Pit") and workspace.Pit:FindFirstChild("Damage")
local damageEnabled = false
local damageTouchedConnection

local function enableDamage()
	if not damagePart then return end
	local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	damagePart.CFrame = root.CFrame
	damagePart.Size = Vector3.new(9999999, 9999999, 9999999)
	if not damageTouchedConnection then
		damageTouchedConnection = damagePart.Touched:Connect(function(hit)
			if hit.Parent and hit.Parent:FindFirstChild("Humanoid") then
				hit.Parent.Humanoid.Health = 0
			end
		end)
	end
end

local function disableDamage()
	if damagePart then
		damagePart.Size = Vector3.new(10, 10, 10)
		damagePart.Position = Vector3.new(0, -5000, 0)
	end
end

disableDamage()

-- F key activates for 2 seconds
UserInputService.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.F then
		killStatus.Text = "Kill: ON"
		enableDamage()
		task.delay(2, function()
			killStatus.Text = "Kill: OFF"
			disableDamage()
		end)
	end
end)

-- Always apply: No touch
local function applyNoTouchToPart(part)
	if part:IsA("BasePart") then
		part.CanCollide = false
		part.CanTouch = false
	end
end

local function applyNoTouchToCharacter(character)
	for _, part in ipairs(character:GetDescendants()) do
		applyNoTouchToPart(part)
	end
	character.DescendantAdded:Connect(applyNoTouchToPart)
end

LocalPlayer.CharacterAdded:Connect(applyNoTouchToCharacter)
if LocalPlayer.Character then applyNoTouchToCharacter(LocalPlayer.Character) end

touchStatus.Text = "Touch: ON"

-- Always apply: Remove ragdoll
local function monitorRagdoll(character)
	task.spawn(function()
		while character and character.Parent do
			local ragdoll = character:FindFirstChild("ragdollValue")
			if ragdoll then
				ragdoll:Destroy()
			end
			task.wait(0.1)
		end
	end)
end

LocalPlayer.CharacterAdded:Connect(monitorRagdoll)
if LocalPlayer.Character then monitorRagdoll(LocalPlayer.Character) end

-- Dragging
local dragging = false
local dragStart, startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)

frame.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)
